'use strict';var _jsxFileName = '/home/ralfidze/Documents/Projects/road_to_learn_react/hackernews/src/tests/App.test.js';var _react = require('react');var _react2 = _interopRequireDefault(_react);
var _reactDom = require('react-dom');var _reactDom2 = _interopRequireDefault(_reactDom);
var _reactTestRenderer = require('react-test-renderer');var _reactTestRenderer2 = _interopRequireDefault(_reactTestRenderer);
var _App = require('../App');var _App2 = _interopRequireDefault(_App);
var _Table = require('../Table');var _Table2 = _interopRequireDefault(_Table);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

describe('App', () => {
  it('renders without crashing', () => {
    const div = document.createElement('div');
    _reactDom2.default.render(_react2.default.createElement(_App2.default, { __source: { fileName: _jsxFileName, lineNumber: 10 }, __self: undefined }), div);
    _reactDom2.default.unmountComponentAtNode(div);
  });

  test('has a valid snapshot', () => {
    const component = _reactTestRenderer2.default.create(
    _react2.default.createElement(_App2.default, { __source: { fileName: _jsxFileName, lineNumber: 16 }, __self: undefined }));

    let tree = component.toJSON();
    expect(tree).toMatchSnapshot();
  });
});

describe('Search', () => {

  it('renders without crashing', () => {
    const div = document.createElement('div');
    _reactDom2.default.render(_react2.default.createElement(_App.SearchComponent, { __source: { fileName: _jsxFileName, lineNumber: 27 }, __self: undefined }, 'Search'), div);
  });

  test('has a valid snapshot', () => {
    const component = _reactTestRenderer2.default.create(
    _react2.default.createElement(_App.SearchComponent, { __source: { fileName: _jsxFileName, lineNumber: 32 }, __self: undefined }, 'Search'));

    let tree = component.toJSON();
    expect(tree).toMatchSnapshot();
  });

});

describe('Button', () => {

  it('renders without crashing', () => {
    const div = document.createElement('div');
    _reactDom2.default.render(_react2.default.createElement(_App.Button, { __source: { fileName: _jsxFileName, lineNumber: 44 }, __self: undefined }, 'Search'), div);
  });

  test('has a valid snapshot', () => {
    const component = _reactTestRenderer2.default.create(
    _react2.default.createElement(_App.Button, { __source: { fileName: _jsxFileName, lineNumber: 49 }, __self: undefined }, 'More'));

    let tree = component.toJSON();
    expect(tree).toMatchSnapshot();
  });

});

describe('Table', () => {
  const props = {
    list: [
    { title: '1', author: '1', num_comments: 1, points: 2, objectID: 'y' },
    { title: '2', author: '2', num_comments: 1, points: 2, objectID: 'x' }] };



  it('renders without crashing', () => {
    const div = document.createElement('div');
    _reactDom2.default.render(_react2.default.createElement(_App.TableComponent, Object.assign({}, props, { __source: { fileName: _jsxFileName, lineNumber: 67 }, __self: undefined })), div);
  });

  test('has a valid snapshot', () => {
    const component = _reactTestRenderer2.default.create(
    _react2.default.createElement(_App.TableComponent, Object.assign({}, props, { __source: { fileName: _jsxFileName, lineNumber: 72 }, __self: undefined })));

    let tree = component.toJSON();
    expect(tree).toMatchSnapshot();
  });



});